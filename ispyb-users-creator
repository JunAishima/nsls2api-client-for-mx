#!/opt/conda_envs/2023-3.2-py310/bin/python

import ispyb_lib
import nsls2api_lib
import argparse
import sys

ispyb_beamlines = ("amx", "fmx", "nyx")

def main(args=[]):
    parser = argparse.ArgumentParser(
        description="Create or update people, visit, and proposal information in ISPyB. Currently restricted to one visit per proposal, and these visits are assigned to 'amx' due to the lack of visit information in NSLS2API."
    )
    parser.add_argument(
            "--cycle",
            action="",
            help="Cycle to create/update people, visits, and proposals for"
    )
    parser.add_argument(
        "--verbose",
        "-v",
        action="count",
        help="Show more log messages. (Use -vv for even more.)",
    )

    args = parser.parse_args(args or sys.argv[1:])
    if args.verbose:
        if args.verbose == 1:
            logging.basicConfig(level="INFO")
        if args.verbose == 2:
            logging.basicConfig(level="DEBUG")
        else:
            logging.basicConfig()  # "WARNING" by default

    cycle = args.cycle

    if not cycle:
        raise RuntimeError("Please define cycle")

    cycle_proposals = nsls2api_lib.get_proposals_from_cycle(cycle)
    for proposal in cycle_proposals:
        proposal_info = get_proposal_info(proposal_id)
        print(proposal_info)
        if ispyb_beamlines in proposal_info["beamlines"]:
            ispyb_lib.add_users_for_proposal(proposal)

if __name__ == "__main__":
    main()
